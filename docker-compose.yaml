services:
  mongodb:
    image: mongo:6.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: request_manager
    ports:
      - '27017:27017'
    volumes:
      - mongodata:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:secret@localhost:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  scheduler-mongodb:
    image: mongo:6.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: scheduler
    ports:
      - '37017:27017'
    volumes:
      - scheduler-mongodata:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:secret@localhost:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - '5672:5672'
      - '15672:15672'
    command: >
      sh -c "
      wget -O /opt/rabbitmq/plugins/rabbitmq_delayed_message_exchange-3.9.0.ez https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/3.9.0/rabbitmq_delayed_message_exchange-3.9.0.ez &&
      rabbitmq-plugins enable rabbitmq_delayed_message_exchange &&
      exec rabbitmq-server
      "
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  request-manager:
    build: ./request-manager
    restart: on-failure
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - '${REQUEST_MANAGER_PORT}:${REQUEST_MANAGER_PORT}'

  request-executor:
    build: ./request-executor
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - '${REQUEST_EXECUTOR_PORT}:${REQUEST_EXECUTOR_PORT}'

  scheduler:
    build: ./scheduler
    restart: on-failure
    depends_on:
      scheduler-mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - '${SCHEDULER_PORT}:${SCHEDULER_PORT}'

  wiremock:
    build:
      context: ./mocks
      dockerfile: Dockerfile
    container_name: wiremock-server
    env_file:
      - .env
    ports:
      - "${WIREMOCK_PORT}:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  service-agent-ui:
    build:
      context: ./service-agent-ui
      args:
        - VITE_TENANTS=${TENANTS}
        - VITE_APP_TITLE=${VITE_APP_TITLE}
        - VITE_APP_VERSION=${VITE_APP_VERSION}
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
        - VITE_API_TIMEOUT=${VITE_API_TIMEOUT}
        - VITE_ENABLE_DEBUG=${VITE_ENABLE_DEBUG}
    environment:
      - REQUEST_MANAGER_PORT=${REQUEST_MANAGER_PORT}
    restart: on-failure
    ports:
      - "${UI_PORT}:80"
    depends_on:
      - request-manager

volumes:
  mongodata:
  scheduler-mongodata: